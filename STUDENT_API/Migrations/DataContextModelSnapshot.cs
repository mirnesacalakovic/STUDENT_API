// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STUDENT_API;

#nullable disable

namespace STUDENT_API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("STUDENT_API.Models.Profesor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PIB")
                        .HasColumnType("int");

                    b.Property<int>("Plata")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("STUDENT_API.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojIndexa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumUpisa")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrzavaRodjenja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradRodjenja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eed1ea16-dd9c-4391-9415-ebc6e30e9dab"),
                            BrojIndexa = "036011/20",
                            DatumUpisa = new DateTime(2021, 3, 16, 13, 13, 6, 571, DateTimeKind.Utc).AddTicks(9946),
                            DrzavaRodjenja = "Srbija",
                            GradRodjenja = "Novi Pazar",
                            Ime = "Adnan",
                            Prezime = "Crnovrsanin"
                        },
                        new
                        {
                            Id = new Guid("1f0d7f15-ba3a-46f8-b702-c780f38f2fa9"),
                            BrojIndexa = "036035/21",
                            DatumUpisa = new DateTime(2022, 3, 16, 13, 13, 6, 571, DateTimeKind.Utc).AddTicks(9962),
                            DrzavaRodjenja = "Srbija",
                            GradRodjenja = "Novi Pazar",
                            Ime = "Mirnesa",
                            Prezime = "Crnovrsanin"
                        },
                        new
                        {
                            Id = new Guid("7eae7b7d-4a69-4c46-a2ce-233a9af06075"),
                            BrojIndexa = "058441/21",
                            DatumUpisa = new DateTime(2022, 3, 16, 13, 13, 6, 571, DateTimeKind.Utc).AddTicks(9964),
                            DrzavaRodjenja = "Srbija",
                            GradRodjenja = "Novi Sad",
                            Ime = "Amina",
                            Prezime = "Hasanovic"
                        },
                        new
                        {
                            Id = new Guid("fd5e1cdc-1e44-4db7-9f6d-189757fc44c3"),
                            BrojIndexa = "038511/20",
                            DatumUpisa = new DateTime(2021, 3, 16, 13, 13, 6, 571, DateTimeKind.Utc).AddTicks(9966),
                            DrzavaRodjenja = "Srbija",
                            GradRodjenja = "Tutin",
                            Ime = "Hasim",
                            Prezime = "Tutic"
                        },
                        new
                        {
                            Id = new Guid("e0551873-a1ef-442e-bd03-915ddf55b067"),
                            BrojIndexa = "088711/20",
                            DatumUpisa = new DateTime(2021, 3, 16, 13, 13, 6, 571, DateTimeKind.Utc).AddTicks(9968),
                            DrzavaRodjenja = "Srbija",
                            GradRodjenja = "Novi Pazar",
                            Ime = "Hamza",
                            Prezime = "Delic"
                        },
                        new
                        {
                            Id = new Guid("993d16fd-5da7-4c35-9bdb-0daf9af55b9b"),
                            BrojIndexa = "088711/20",
                            DatumUpisa = new DateTime(2021, 3, 16, 13, 13, 6, 571, DateTimeKind.Utc).AddTicks(9985),
                            DrzavaRodjenja = "ASajd",
                            GradRodjenja = "Novi Sad",
                            Ime = "ne znam",
                            Prezime = "Mirbejnd"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
